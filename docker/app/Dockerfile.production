# syntax=docker/dockerfile:experimental
# vim: ft=dockerfile

# bundle
FROM ruby:2.7.1-alpine3.11 AS bundle
WORKDIR /app
ENV RAILS_ENV "production"
COPY Gemfile Gemfile.lock /app/
RUN \
  --mount=type=cache,target=/var/cache/apk \
  --mount=type=cache,target=/var/lib/apk \
  --mount=type=cache,target=/etc/apk/cache \
  apk add -U \
    build-base \
    git \
    postgresql-client \
    postgresql-dev \
    postgresql-libs \
    && \
  bundle install

# node_modules
FROM ruby:2.7.1-alpine3.11 AS node_modules
WORKDIR /app
ENV NODE_ENV "production"
COPY package.json yarn.lock /app/
RUN \
  --mount=type=cache,target=/var/cache/apk \
  --mount=type=cache,target=/var/lib/apk \
  --mount=type=cache,target=/etc/apk/cache \
  --mount=type=cache,target=/usr/local/share/.cache/yarn/v4 \
  apk add -U \
    nodejs \
    yarn \
    && \
  yarn install --check-files

# assets
FROM ruby:2.7.1-alpine3.11 AS assets
WORKDIR /app
COPY --from=bundle /usr/local/bundle /usr/local/bundle/
COPY --from=node_modules /app/node_modules /app-node_modules/
COPY Gemfile Gemfile.lock Rakefile config.ru package.json postcss.config.js tsconfig.json yarn.lock /app/
COPY app /app/app/
COPY bin /app/bin/
COPY config /app/config/
COPY db /app/db/
COPY lib /app/lib/
COPY public /app/public/
ENV RAILS_ENV "production"
ENV NODE_ENV "production"
ARG RAILS_MASTER_KEY
ENV RAILS_MASTER_KEY ${RAILS_MASTER_KEY}
RUN \
  --mount=type=cache,target=/var/cache/apk \
  --mount=type=cache,target=/var/lib/apk \
  --mount=type=cache,target=/etc/apk/cache \
  --mount=type=cache,target=/usr/local/share/.cache/yarn/v4 \
  --mount=type=cache,target=/app/tmp/cache \
  apk add --update \
    build-base \
    git \
    nodejs \
    postgresql-client \
    postgresql-dev \
    postgresql-libs \
    tzdata \
    yarn \
    && \
  bundle exec rails tmp:create && \
  bundle exec rails assets:precompile

# main
FROM ruby:2.7.1-alpine3.11
WORKDIR /app
ENV RAILS_ENV "production"
ENV NODE_ENV "production"
ARG RAILS_MASTER_KEY
ENV RAILS_MASTER_KEY ${RAILS_MASTER_KEY}
RUN \
  --mount=type=cache,target=/var/cache/apk \
  --mount=type=cache,target=/var/lib/apk \
  --mount=type=cache,target=/etc/apk/cache \
  apk add -U \
    build-base \
    git \
    nodejs \
    postgresql-client \
    postgresql-dev \
    postgresql-libs \
    tzdata \
    yarn
COPY Gemfile Gemfile.lock Rakefile config.ru package.json postcss.config.js tsconfig.json yarn.lock /app/
COPY app /app/app/
COPY bin /app/bin/
COPY config /app/config/
COPY db /app/db/
COPY lib /app/lib/
COPY public /app/public/
COPY --from=bundle /usr/local/bundle /usr/local/bundle/
COPY --from=node_modules /app/node_modules /app/node_modules/
COPY --from=assets /app/public/assets /app/public/assets/
COPY --from=assets /app/public/packs /app/public/packs/
COPY ./docker/app/docker-entrypoint.production.sh /usr/local/bin/docker-entrypoint.sh
ENTRYPOINT ["/usr/local/bin/docker-entrypoint.sh"]
EXPOSE 3000
